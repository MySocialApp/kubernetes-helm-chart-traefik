apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "kubernetes.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "kubernetes.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.traefikReplicas }}
  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ template "kubernetes.name" . }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "kubernetes.name" . }}
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        {{- range $key, $val := .Values.traefikNodeSelector }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
      serviceAccountName: {{ template "kubernetes.name" . }}
      terminationGracePeriodSeconds: 3600
      hostNetwork: true
      initContainers:
      - name: {{ template "kubernetes.name" . }}-bootstrap
        image: quay.io/mysocialapp/docker-traefik-bootstrap-ha:{{ .Values.traefikImageVersion }}
        command:
          - "/bin/sh"
          - "-c"
          - "cat /etc/traefik/resolv.conf > /etc/resolv.conf ; /bin/sh -c /traefik-scripts/bootstrap.sh"
        volumeMounts:
        - name: traefik-config
          mountPath: /etc/traefik
        - name: traefik-scripts
          mountPath: /traefik-scripts
      containers:
      - name: {{ template "kubernetes.name" . }}
        image: quay.io/mysocialapp/docker-traefik-bootstrap-ha:{{ .Values.traefikImageVersion }}
        command:
          - "/bin/sh"
          - "-c"
          - "cat /etc/traefik/resolv.conf > /etc/resolv.conf ; /entrypoint.sh --consul --consul.endpoint={{ .Values.traefikConsulServiceName }}:8500"
        env:
        {{ if .Values.traefikCloudflareDnsUpdate }}
        - name: CLOUDFLARE_EMAIL
          valueFrom:
            secretKeyRef:
              name: externaldns
              key: cloudflare.api.email
        - name: CLOUDFLARE_API_KEY
          valueFrom:
            secretKeyRef:
              name: externaldns
              key: cloudflare.api.key
        lifecycle:
          postStart:
            exec:
              command:
              - "/bin/sh"
              - "-c"
              - |
                {{- range $rrdns, $zoneid := .Values.traefikCloudflareDnsUpdate }}
                /traefik-scripts/lifecycle.sh start {{ $zoneid | quote}} {{ $rrdns | quote }} >> /preStart_{{ $rrdns }}_{{ $zoneid }}.log 2>&1
                {{- end}}
          preStop:
            exec:
              command:
              - "/bin/sh"
              - "-c"
              - |
                {{- range $rrdns, $zoneid := .Values.traefikCloudflareDnsUpdate }}
                /traefik-scripts/lifecycle.sh stop {{ $zoneid | quote}} {{ $rrdns | quote }} >> /preStop_{{ $rrdns }}_{{ $zoneid }}.log 2>&1
                {{- end}}
        {{ end }}
        resources:
{{ toYaml .Values.traefikConfig.resources | indent 10 }}
        ports:
        - name: http
          hostPort: 80
          containerPort: 80
        - name: https
          hostPort: 443
          containerPort: 443
        - name: admin
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 443
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          privileged: true
        volumeMounts:
        - name: traefik-config
          mountPath: /etc/traefik
        - name: traefik-scripts
          mountPath: /traefik-scripts
      volumes:
      - name: traefik-config
        configMap:
          name: {{ template "kubernetes.name" . }}
      - name: traefik-scripts
        configMap:
          name: {{ template "kubernetes.name" . }}-scripts
          defaultMode: 0775
